{"version":3,"file":"static/js/991.f889674c.chunk.js","mappings":"8NAeA,EAbwB,SAACA,GACvB,OACE,gBACEC,UAAS,mBAAcD,EAAMC,WAC7BC,MAAO,CACLC,OAAQH,EAAMG,OACdC,MAAOJ,EAAMI,OAAS,OACtBC,aAAcL,EAAMM,WC2B5B,EA9BkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,GAAWC,EAAAA,EAAAA,MACjB,IAAKF,EAAM,OAAO,KAClB,IAAQG,EAAuDH,EAAvDG,MAAOC,EAAgDJ,EAAhDI,aAAcC,EAAkCL,EAAlCK,aAAcC,EAAoBN,EAApBM,YAAaC,EAAOP,EAAPO,GAGxD,OAFAC,QAAQC,IAAI,OAAQT,IAGlB,iBAAKN,UAAU,qFAAf,WACE,gBACEgB,IAAKC,EAAAA,GAAAA,aAAqBL,GAC1BM,IAAI,GACJlB,UAAU,iEAEZ,iBAAKA,UAAU,uBAAf,WACE,eAAIA,UAAU,gCAAd,SAA+CS,KAC/C,iBAAKT,UAAU,2EAAf,WACE,0BAAO,IAAImB,KAAKR,GAAcS,iBAC9B,0BAAOV,QAET,SAACW,EAAA,EAAD,CACEC,MAAI,EACJC,QAAQ,YACRC,QAAS,kBAAMjB,EAAS,UAAD,OAAWM,KAHpC,8BAaKY,EAAoB,WAC/B,OACE,iBAAKzB,UAAU,qFAAf,WACE,SAAC,EAAD,CACEG,MAAM,OACND,OAAO,QACPG,OAAO,MACPL,UAAU,UAEZ,iBAAKA,UAAU,uBAAf,WACE,eAAIA,UAAU,gCAAd,UACE,SAAC,EAAD,CACEG,MAAM,OACND,OAAO,OACPG,OAAO,MACPL,UAAU,YAGd,iBAAKA,UAAU,2EAAf,WACE,2BACE,SAAC,EAAD,CAAiBG,MAAM,OAAOD,OAAO,YAEvC,2BACE,SAAC,EAAD,CAAiBC,MAAM,OAAOD,OAAO,eAGzC,SAAC,EAAD,CACEC,MAAM,OACND,OAAO,OACPG,OAAO,gB,yHCnBjB,EA3CkB,SAAC,GAA8B,IAAD,IAA3BqB,KAAAA,OAA2B,MAApB,cAAoB,EAC9C,GAAwBC,EAAAA,EAAAA,IAAOV,EAAAA,GAAAA,aAAqBS,GAAOE,EAAAA,IAAnDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACRC,GAAaF,IAASC,EACtBE,GAAa,OAAJH,QAAI,IAAJA,OAAA,EAAAA,EAAMI,UAAW,GAGhC,OACE,iBAAKjC,UAAU,aAAf,UACG+B,IACC,+BACE,UAAC,KAAD,CAAQG,WAAY,OAAQC,aAAc,GAAIC,cAAe,OAA7D,WACE,SAAC,KAAD,WACE,SAACC,EAAA,EAAD,OAEF,SAAC,KAAD,WACE,SAACA,EAAA,EAAD,OAEF,SAAC,KAAD,WACE,SAACA,EAAA,EAAD,OAEF,SAAC,KAAD,WACE,SAACA,EAAA,EAAD,OAEF,SAAC,KAAD,WACE,SAACA,EAAA,EAAD,YAKNN,IACA,SAAC,KAAD,CAAQG,WAAY,OAAQC,aAAc,GAAIC,cAAe,OAA7D,SACGJ,EAAOM,OAAS,GACfN,EAAOO,KAAI,SAACjC,GAAD,OACT,SAAC,KAAD,WACE,SAAC+B,EAAA,EAAD,CAAW/B,KAAMA,KADDA,EAAKO,aCVrC,EAzBiB,WACf,OACE,iCACE,qBAASb,UAAU,mDAAnB,WACE,eAAIA,UAAU,iDAAd,0BAGA,SAAC,EAAD,QAEF,qBAASA,UAAU,mDAAnB,WACE,eAAIA,UAAU,iDAAd,wBAGA,SAAC,EAAD,CAAW0B,KAAK,kBAElB,qBAAS1B,UAAU,mDAAnB,WACE,eAAIA,UAAU,iDAAd,uBAGA,SAAC,EAAD,CAAW0B,KAAK","sources":["components/loading/LoadingSkeleton.js","components/movie/MovieCard.js","components/movie/MovieList.js","page/HomePage.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst LoadingSkeleton = (props) => {\r\n  return (\r\n    <div\r\n      className={`skeleton ${props.className}`}\r\n      style={{\r\n        height: props.height,\r\n        width: props.width || \"100%\",\r\n        borderRadius: props.radius,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default LoadingSkeleton;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { tmdbAPI } from \"../../config\";\r\nimport Button from \"../button/Button\";\r\nimport LoadingSkeleton from \"../loading/LoadingSkeleton\";\r\n\r\nconst MovieCard = ({ item }) => {\r\n  const navigate = useNavigate();\r\n  if (!item) return null;\r\n  const { title, vote_average, release_date, poster_path, id } = item;\r\n  console.log(\"item\", item);\r\n  // console.log(title);\r\n  return (\r\n    <div className=\"movie-card flex flex-col rounded-lg p-3 bg-slate-800 text-white h-full select-none\">\r\n      <img\r\n        src={tmdbAPI.imgMovieCard(poster_path)}\r\n        alt=\"\"\r\n        className=\"w-full h-[250px] object-cover rounded-lg mb-5 flex-shrink-0\"\r\n      />\r\n      <div className=\"flex flex-col flex-1\">\r\n        <h3 className=\"text-xl font-bold mb-3 flex-1\">{title}</h3>\r\n        <div className=\"flex items-center justify-between text-sm opacity-50 mb-10 flex-shrink-0\">\r\n          <span>{new Date(release_date).getFullYear()}</span>\r\n          <span>{vote_average}</span>\r\n        </div>\r\n        <Button\r\n          full\r\n          bgColor=\"secondary\"\r\n          onClick={() => navigate(`/movie/${id}`)}\r\n        >\r\n          watch now\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MovieCard;\r\n\r\nexport const MovieCardSkeleton = () => {\r\n  return (\r\n    <div className=\"movie-card flex flex-col rounded-lg p-3 bg-slate-800 text-white h-full select-none\">\r\n      <LoadingSkeleton\r\n        width=\"100%\"\r\n        height=\"250px\"\r\n        radius=\"8px\"\r\n        className=\"mb-5\"\r\n      ></LoadingSkeleton>\r\n      <div className=\"flex flex-col flex-1\">\r\n        <h3 className=\"text-xl font-bold mb-3 flex-1\">\r\n          <LoadingSkeleton\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            radius=\"8px\"\r\n            className=\"mb-5\"\r\n          ></LoadingSkeleton>\r\n        </h3>\r\n        <div className=\"flex items-center justify-between text-sm opacity-50 mb-10 flex-shrink-0\">\r\n          <span>\r\n            <LoadingSkeleton width=\"50px\" height=\"10px\"></LoadingSkeleton>\r\n          </span>\r\n          <span>\r\n            <LoadingSkeleton width=\"30px\" height=\"10px\"></LoadingSkeleton>\r\n          </span>\r\n        </div>\r\n        <LoadingSkeleton\r\n          width=\"100%\"\r\n          height=\"45px\"\r\n          radius=\"6px\"\r\n        ></LoadingSkeleton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { SwiperSlide, Swiper } from \"swiper/react\";\r\nimport useSWR from \"swr\";\r\nimport { fetcher, tmdbAPI } from \"../../config\";\r\nimport MovieCard, { MovieCardSkeleton } from \"./MovieCard\";\r\nconst MovieList = ({ type = \"now_playing\" }) => {\r\n  const { data, error } = useSWR(tmdbAPI.getMovieList(type), fetcher);\r\n  const isLoading = !data && !error;\r\n  const movies = data?.results || [];\r\n  // console.log(\"data API\", movies);\r\n  // MovieCardSkeleton\r\n  return (\r\n    <div className=\"movie-list\">\r\n      {isLoading && (\r\n        <>\r\n          <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\r\n            <SwiperSlide>\r\n              <MovieCardSkeleton></MovieCardSkeleton>\r\n            </SwiperSlide>\r\n            <SwiperSlide>\r\n              <MovieCardSkeleton></MovieCardSkeleton>\r\n            </SwiperSlide>\r\n            <SwiperSlide>\r\n              <MovieCardSkeleton></MovieCardSkeleton>\r\n            </SwiperSlide>\r\n            <SwiperSlide>\r\n              <MovieCardSkeleton></MovieCardSkeleton>\r\n            </SwiperSlide>\r\n            <SwiperSlide>\r\n              <MovieCardSkeleton></MovieCardSkeleton>\r\n            </SwiperSlide>\r\n          </Swiper>\r\n        </>\r\n      )}\r\n      {!isLoading && (\r\n        <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\r\n          {movies.length > 0 &&\r\n            movies.map((item) => (\r\n              <SwiperSlide key={item.id}>\r\n                <MovieCard item={item}></MovieCard>\r\n              </SwiperSlide>\r\n            ))}\r\n        </Swiper>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React from \"react\";\r\nimport MovieList from \"../components/movie/MovieList\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <>\r\n      <section className=\"movie-layout page-container page-container pb-10\">\r\n        <h2 className=\"capitalize text-white mb-10 text-2xl font-bold\">\r\n          now playing\r\n        </h2>\r\n        <MovieList></MovieList>\r\n      </section>\r\n      <section className=\"movie-layout page-container page-container pb-10\">\r\n        <h2 className=\"capitalize text-white mb-10 text-2xl font-bold\">\r\n          top rated\r\n        </h2>\r\n        <MovieList type=\"top_rated\"></MovieList>\r\n      </section>\r\n      <section className=\"movie-layout page-container page-container pb-10\">\r\n        <h2 className=\"capitalize text-white mb-10 text-2xl font-bold\">\r\n          trending\r\n        </h2>\r\n        <MovieList type=\"popular\"></MovieList>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["props","className","style","height","width","borderRadius","radius","item","navigate","useNavigate","title","vote_average","release_date","poster_path","id","console","log","src","tmdbAPI","alt","Date","getFullYear","Button","full","bgColor","onClick","MovieCardSkeleton","type","useSWR","fetcher","data","error","isLoading","movies","results","grabCursor","spaceBetween","slidesPerView","MovieCard","length","map"],"sourceRoot":""}