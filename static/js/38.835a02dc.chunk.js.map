{"version":3,"file":"static/js/38.835a02dc.chunk.js","mappings":"6NAeA,EAbwB,SAACA,GACvB,OACE,gBACEC,UAAS,mBAAcD,EAAMC,WAC7BC,MAAO,CACLC,OAAQH,EAAMG,OACdC,MAAOJ,EAAMI,OAAS,OACtBC,aAAcL,EAAMM,WC2B5B,EA9BkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,GAAWC,EAAAA,EAAAA,MACjB,IAAKF,EAAM,OAAO,KAClB,IAAQG,EAAuDH,EAAvDG,MAAOC,EAAgDJ,EAAhDI,aAAcC,EAAkCL,EAAlCK,aAAcC,EAAoBN,EAApBM,YAAaC,EAAOP,EAAPO,GAGxD,OAFAC,QAAQC,IAAI,OAAQT,IAGlB,iBAAKN,UAAU,qFAAf,WACE,gBACEgB,IAAKC,EAAAA,GAAAA,aAAqBL,GAC1BM,IAAI,GACJlB,UAAU,iEAEZ,iBAAKA,UAAU,uBAAf,WACE,eAAIA,UAAU,gCAAd,SAA+CS,KAC/C,iBAAKT,UAAU,2EAAf,WACE,0BAAO,IAAImB,KAAKR,GAAcS,iBAC9B,0BAAOV,QAET,SAACW,EAAA,EAAD,CACEC,MAAI,EACJC,QAAQ,YACRC,QAAS,kBAAMjB,EAAS,UAAD,OAAWM,KAHpC,8BAaKY,EAAoB,WAC/B,OACE,iBAAKzB,UAAU,qFAAf,WACE,SAAC,EAAD,CACEG,MAAM,OACND,OAAO,QACPG,OAAO,MACPL,UAAU,UAEZ,iBAAKA,UAAU,uBAAf,WACE,eAAIA,UAAU,gCAAd,UACE,SAAC,EAAD,CACEG,MAAM,OACND,OAAO,OACPG,OAAO,MACPL,UAAU,YAGd,iBAAKA,UAAU,2EAAf,WACE,2BACE,SAAC,EAAD,CAAiBG,MAAM,OAAOD,OAAO,YAEvC,2BACE,SAAC,EAAD,CAAiBC,MAAM,OAAOD,OAAO,eAGzC,SAAC,EAAD,CACEC,MAAM,OACND,OAAO,OACPG,OAAO,gB,0KC0DjB,EAnHkB,WAChB,OAAoCqB,EAAAA,EAAAA,UAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAAgCN,EAAAA,EAAAA,UAAS,GAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KACA,GAAsBR,EAAAA,EAAAA,UAAST,EAAAA,GAAAA,aAAqB,UAAWgB,IAA/D,eAAOE,EAAP,KAAYC,EAAZ,KACMC,ECdO,WAA0D,IAArCC,EAAoC,uDAAnB,IAAKC,EAAc,uDAAN,IAChE,GAA0Cb,EAAAA,EAAAA,UAASY,GAAnD,eAAOE,EAAP,KAAsBC,EAAtB,KASA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQC,YAAW,WACvBH,EAAiBH,KAChBE,GACH,OAAO,WACLK,aAAaF,MAEd,CAACJ,EAAOD,IACJE,EDIgBM,CAAYf,EAAQ,KAQ3C,GAAwBgB,EAAAA,EAAAA,IAAOZ,EAAKa,EAAAA,IAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdpC,QAAQC,IAAI,OAAQkC,GAEpB,IAAME,GAAa,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMG,UAAW,GAG1BC,GAAWJ,IAASC,GAK1BR,EAAAA,EAAAA,YAAU,WAENN,EADEC,EACKpB,EAAAA,GAAAA,eAAuBoB,EAAgBJ,GAEvChB,EAAAA,GAAAA,aAAqB,UAAWgB,MAExC,CAACI,EAAgBJ,KACpBS,EAAAA,EAAAA,YAAU,WACHO,GAASA,EAAKK,eACnBxB,EAAayB,KAAKC,KAAKP,EAAKK,cAnCX,OAoChB,CAACL,EAAMtB,IAMV,OACE,iBAAK3B,UAAU,uBAAf,WACE,iBAAKA,UAAU,aAAf,WACE,gBAAKA,UAAU,SAAf,UACE,kBACEyD,SAnCiB,SAACC,GAC1B1B,EAAU0B,EAAEC,OAAOC,QAmCX5D,UAAU,qEACV6D,KAAK,OACLC,YAAY,8BAGhB,mBAAQ9D,UAAU,yCAAlB,UACE,gBACE+D,MAAM,6BACN/D,UAAU,UACVgE,KAAK,OACLC,QAAQ,YACRC,OAAO,eACPC,YAAY,IANd,UAQE,iBACEC,cAAc,QACdC,eAAe,QACfF,YAAY,IACZG,EAAE,uDAQTjB,IACC,gBAAKrD,UAAU,0BAAf,SACG,IAAIuE,MA5EM,IA4EcP,KAAK,GAAGQ,KAAI,kBACnC,SAACC,EAAA,EAAD,IAAwBC,EAAAA,EAAAA,YAI9B,gBAAK1E,UAAU,0BAAf,UACIqD,GACAF,EAAOwB,OAAS,GAChBxB,EAAOqB,KAAI,SAAClE,GAAD,OACT,SAACmE,EAAA,EAAD,CAAyBnE,KAAMA,GAAfA,EAAKO,UAI3B,gBAAKb,UAAU,QAAf,UACE,SAAC,IAAD,CACEA,UAAU,aACV4E,WAAW,MACXC,UAAU,SACVC,aAzDgB,SAACC,GACvB,IAAMC,EAtCW,GAsCED,EAAME,SAA2BhC,EAAKK,cACzD1B,EAAcoD,GACd9C,EAAY6C,EAAME,SAAW,IAuDvBC,mBAAoB,EACpBrD,UAAWA,EACXsD,cAAc,aACdC,sBAAuB","sources":["components/loading/LoadingSkeleton.js","components/movie/MovieCard.js","page/MoviePage.js","hook/useDebounce.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst LoadingSkeleton = (props) => {\r\n  return (\r\n    <div\r\n      className={`skeleton ${props.className}`}\r\n      style={{\r\n        height: props.height,\r\n        width: props.width || \"100%\",\r\n        borderRadius: props.radius,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default LoadingSkeleton;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { tmdbAPI } from \"../../config\";\r\nimport Button from \"../button/Button\";\r\nimport LoadingSkeleton from \"../loading/LoadingSkeleton\";\r\n\r\nconst MovieCard = ({ item }) => {\r\n  const navigate = useNavigate();\r\n  if (!item) return null;\r\n  const { title, vote_average, release_date, poster_path, id } = item;\r\n  console.log(\"item\", item);\r\n  // console.log(title);\r\n  return (\r\n    <div className=\"movie-card flex flex-col rounded-lg p-3 bg-slate-800 text-white h-full select-none\">\r\n      <img\r\n        src={tmdbAPI.imgMovieCard(poster_path)}\r\n        alt=\"\"\r\n        className=\"w-full h-[250px] object-cover rounded-lg mb-5 flex-shrink-0\"\r\n      />\r\n      <div className=\"flex flex-col flex-1\">\r\n        <h3 className=\"text-xl font-bold mb-3 flex-1\">{title}</h3>\r\n        <div className=\"flex items-center justify-between text-sm opacity-50 mb-10 flex-shrink-0\">\r\n          <span>{new Date(release_date).getFullYear()}</span>\r\n          <span>{vote_average}</span>\r\n        </div>\r\n        <Button\r\n          full\r\n          bgColor=\"secondary\"\r\n          onClick={() => navigate(`/movie/${id}`)}\r\n        >\r\n          watch now\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MovieCard;\r\n\r\nexport const MovieCardSkeleton = () => {\r\n  return (\r\n    <div className=\"movie-card flex flex-col rounded-lg p-3 bg-slate-800 text-white h-full select-none\">\r\n      <LoadingSkeleton\r\n        width=\"100%\"\r\n        height=\"250px\"\r\n        radius=\"8px\"\r\n        className=\"mb-5\"\r\n      ></LoadingSkeleton>\r\n      <div className=\"flex flex-col flex-1\">\r\n        <h3 className=\"text-xl font-bold mb-3 flex-1\">\r\n          <LoadingSkeleton\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            radius=\"8px\"\r\n            className=\"mb-5\"\r\n          ></LoadingSkeleton>\r\n        </h3>\r\n        <div className=\"flex items-center justify-between text-sm opacity-50 mb-10 flex-shrink-0\">\r\n          <span>\r\n            <LoadingSkeleton width=\"50px\" height=\"10px\"></LoadingSkeleton>\r\n          </span>\r\n          <span>\r\n            <LoadingSkeleton width=\"30px\" height=\"10px\"></LoadingSkeleton>\r\n          </span>\r\n        </div>\r\n        <LoadingSkeleton\r\n          width=\"100%\"\r\n          height=\"45px\"\r\n          radius=\"6px\"\r\n        ></LoadingSkeleton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useSWR from \"swr\";\r\nimport MovieCard, { MovieCardSkeleton } from \"../components/movie/MovieCard\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport useSWRInfinite from \"swr/infinite\";\r\nimport { fetcher, tmdbAPI } from \"../config\";\r\nimport useDebounce from \"../hook/useDebounce\";\r\nimport { v4 } from \"uuid\";\r\nimport Button from \"../components/button/Button\";\r\nconst itemsPerPage = 20; //movies item\r\nconst MoviePage = () => {\r\n  const [itemOffset, setItemOffset] = useState(0);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [nextPage, setNextPage] = useState(1);\r\n  const [url, setUrl] = useState(tmdbAPI.getMovieList(\"popular\", nextPage));\r\n  const filterDebounce = useDebounce(filter, 1000);\r\n  // const { data, error, size, setSize } = useSWRInfinite(\r\n  //   (index) => url.replace(\"page=1\", `page=${index + 1}`),\r\n  //   fetcher\r\n  // );\r\n  const handelFilterChange = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n  const { data, error } = useSWR(url, fetcher);\r\n  console.log(\"data\", data);\r\n  // const pageCount = 5;\r\n  const movies = data?.results || [];\r\n  // const movies = data ? data.reduce((a, b) => a.concat(b.results), []) : [];\r\n  // console.log(\"movies\", movies);\r\n  const loading = !data && !error;\r\n  // const isEmpty = data?.[0]?.results.length === 0;\r\n  // const isReachingEnd =\r\n  //   isEmpty || (data && data[data.length - 1]?.results.length < itemsPerPage);\r\n  // console.log(\"isReachingEnd\", isReachingEnd);\r\n  useEffect(() => {\r\n    if (filterDebounce) {\r\n      setUrl(tmdbAPI.getMovieSearch(filterDebounce, nextPage));\r\n    } else {\r\n      setUrl(tmdbAPI.getMovieList(\"popular\", nextPage));\r\n    }\r\n  }, [filterDebounce, nextPage]);\r\n  useEffect(() => {\r\n    if (!data || !data.total_results) return;\r\n    setPageCount(Math.ceil(data.total_results / itemsPerPage));\r\n  }, [data, itemOffset]);\r\n  const handlePageClick = (event) => {\r\n    const newOffset = (event.selected * itemsPerPage) % data.total_results;\r\n    setItemOffset(newOffset);\r\n    setNextPage(event.selected + 1);\r\n  };\r\n  return (\r\n    <div className=\"py-10 page-container\">\r\n      <div className=\"flex mb-10\">\r\n        <div className=\"flex-1\">\r\n          <input\r\n            onChange={handelFilterChange}\r\n            className=\"input rounded-l-lg w-full p-4 bg-slate-800 text-white outline-none\"\r\n            type=\"text\"\r\n            placeholder=\"Type Here To Search...\"\r\n          />\r\n        </div>\r\n        <button className=\"rounded-r-lg p-4 bg-primary text-white\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-6 w-6\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      {/* {loading && (\r\n        <div className=\"w-10 h-10 rounded-full border-4 border-primary border-t-transparent border-t-4 mx-auto animate-spin\"></div>\r\n      )} */}\r\n      {loading && (\r\n        <div className=\"grid grid-cols-4 gap-10\">\r\n          {new Array(itemsPerPage).fill(0).map(() => (\r\n            <MovieCardSkeleton key={v4()}></MovieCardSkeleton>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <div className=\"grid grid-cols-4 gap-10\">\r\n        {!loading &&\r\n          movies.length > 0 &&\r\n          movies.map((item) => (\r\n            <MovieCard key={item.id} item={item}></MovieCard>\r\n          ))}\r\n      </div>\r\n      {/* Pagination */}\r\n      <div className=\"mt-10\">\r\n        <ReactPaginate\r\n          className=\"pagination\"\r\n          breakLabel=\"...\"\r\n          nextLabel=\"next >\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"< previous\"\r\n          renderOnZeroPageCount={null}\r\n        />\r\n      </div>\r\n\r\n      {/* Load More */}\r\n      {/* <div className=\"mt-10 text-center\">\r\n        <Button\r\n          onClick={() => (isReachingEnd ? {} : setSize(size + 1))}\r\n          disabled={isReachingEnd}\r\n          className={`${isReachingEnd ? \"bg-slate-700\" : \"\"}`}\r\n        >\r\n          Load More\r\n        </Button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function useDebounce(intializeValue = \" \", delay = 1000) {\r\n  const [debounceValue, setDebounceValue] = useState(intializeValue);\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setDebounceValue(intializeValue);\r\n    }, debounceValue);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [delay, intializeValue]);\r\n  return debounceValue;\r\n}\r\n"],"names":["props","className","style","height","width","borderRadius","radius","item","navigate","useNavigate","title","vote_average","release_date","poster_path","id","console","log","src","tmdbAPI","alt","Date","getFullYear","Button","full","bgColor","onClick","MovieCardSkeleton","useState","itemOffset","setItemOffset","pageCount","setPageCount","filter","setFilter","nextPage","setNextPage","url","setUrl","filterDebounce","intializeValue","delay","debounceValue","setDebounceValue","useEffect","timer","setTimeout","clearTimeout","useDebounce","useSWR","fetcher","data","error","movies","results","loading","total_results","Math","ceil","onChange","e","target","value","type","placeholder","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","Array","map","MovieCard","v4","length","breakLabel","nextLabel","onPageChange","event","newOffset","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount"],"sourceRoot":""}