{"version":3,"file":"static/js/950.e3f2341a.chunk.js","mappings":"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","sources":["components/loading/LoadingSkeleton.js","components/movie/MovieCard.js","page/MovieDetailPage.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst LoadingSkeleton = (props) => {\r\n  return (\r\n    <div\r\n      className={`skeleton ${props.className}`}\r\n      style={{\r\n        height: props.height,\r\n        width: props.width || \"100%\",\r\n        borderRadius: props.radius,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default LoadingSkeleton;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { tmdbAPI } from \"../../config\";\r\nimport Button from \"../button/Button\";\r\nimport LoadingSkeleton from \"../loading/LoadingSkeleton\";\r\n\r\nconst MovieCard = ({ item }) => {\r\n  const navigate = useNavigate();\r\n  if (!item) return null;\r\n  const { title, vote_average, release_date, poster_path, id } = item;\r\n  // console.log(\"item\", item);\r\n  // console.log(title);\r\n  return (\r\n    <div className=\"movie-card flex flex-col rounded-lg p-3 bg-slate-800 text-white h-full select-none\">\r\n      <img\r\n        src={tmdbAPI.imgMovieCard(poster_path)}\r\n        alt=\"\"\r\n        className=\"w-full h-[250px] object-cover rounded-lg mb-5 flex-shrink-0\"\r\n      />\r\n      <div className=\"flex flex-col flex-1\">\r\n        <h3 className=\"text-xl font-bold mb-3 flex-1\">{title}</h3>\r\n        <div className=\"flex items-center justify-between text-sm opacity-50 mb-10 flex-shrink-0\">\r\n          <span>{new Date(release_date).getFullYear()}</span>\r\n          <span>{vote_average}</span>\r\n        </div>\r\n        <Button\r\n          full\r\n          bgColor=\"secondary\"\r\n          onClick={() => navigate(`/movie/${id}`)}\r\n        >\r\n          watch now\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MovieCard;\r\n\r\nexport const MovieCardSkeleton = () => {\r\n  return (\r\n    <div className=\"movie-card flex flex-col rounded-lg p-3 bg-slate-800 text-white h-full select-none\">\r\n      <LoadingSkeleton\r\n        width=\"100%\"\r\n        height=\"250px\"\r\n        radius=\"8px\"\r\n        className=\"mb-5\"\r\n      ></LoadingSkeleton>\r\n      <div className=\"flex flex-col flex-1\">\r\n        <h3 className=\"text-xl font-bold mb-3 flex-1\">\r\n          <LoadingSkeleton\r\n            width=\"100%\"\r\n            height=\"250px\"\r\n            radius=\"8px\"\r\n            className=\"mb-5\"\r\n          ></LoadingSkeleton>\r\n        </h3>\r\n        <div className=\"flex items-center justify-between text-sm opacity-50 mb-10 flex-shrink-0\">\r\n          <span>\r\n            <LoadingSkeleton width=\"50px\" height=\"10px\"></LoadingSkeleton>\r\n          </span>\r\n          <span>\r\n            <LoadingSkeleton width=\"30px\" height=\"10px\"></LoadingSkeleton>\r\n          </span>\r\n        </div>\r\n        <LoadingSkeleton\r\n          width=\"100%\"\r\n          height=\"45px\"\r\n          radius=\"6px\"\r\n        ></LoadingSkeleton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { SwiperSlide, Swiper } from \"swiper/react\";\r\nimport useSWR from \"swr\";\r\nimport MovieCard from \"../components/movie/MovieCard\";\r\nimport { fetcher, tmdbAPI } from \"../config\";\r\nconst MovieDetailPage = () => {\r\n  const { movieID } = useParams();\r\n  console.log(\"movieID\", movieID);\r\n\r\n  const { data, error } = useSWR(tmdbAPI.getMovieDetail(movieID), fetcher);\r\n  console.log(\"data\", data);\r\n  if (!data) return null;\r\n  const { poster_path, backdrop_path, title, genres, overview } = data;\r\n  return (\r\n    <div className=\"py-10\">\r\n      <div className=\"w-full h-[600px] relative mb-10\">\r\n        <div className=\"absolute inset-0 bg-black bg-opacity-70\"></div>\r\n        <div\r\n          className=\"w-full h-full bg-cover bg-no-repeat\"\r\n          style={{\r\n            backgroundImage: `url(${tmdbAPI.imageOriginal(backdrop_path)}`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"w-full h-[400px] max-w-[800px] mx-auto -mt-[200px] relative z-10 pb-10\">\r\n        <img\r\n          src={tmdbAPI.imageOriginal(poster_path)}\r\n          alt=\"\"\r\n          className=\"w-full h-full object-cover rounded-xl\"\r\n        />\r\n      </div>\r\n      <h1 className=\"text-center text-4xl text-white font-bold mb-10\">\r\n        {title}\r\n      </h1>\r\n      {genres.length > 0 && (\r\n        <div className=\"flex items-center justify-center gap-x-5 mb-10\">\r\n          {genres.map((item) => (\r\n            <span\r\n              className=\"py-2 px-4 border-primary text-primary border rounded\"\r\n              key={item.id}\r\n            >\r\n              {item.name}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <p className=\"text-center text-sm leading-relaxed max-w-[600px] mx-auto mb-10\">\r\n        {overview}\r\n      </p>\r\n      <MovieCredit></MovieCredit>\r\n      <MovieVideos></MovieVideos>\r\n      <MovieSimilar></MovieSimilar>\r\n    </div>\r\n  );\r\n};\r\nfunction MovieCredit() {\r\n  const { movieID } = useParams();\r\n  const { data, error } = useSWR(\r\n    tmdbAPI.getMovieCredits(movieID, \"credits\"),\r\n    fetcher\r\n  );\r\n  console.log(\"data\", data);\r\n  if (!data) return null;\r\n  const { cast } = data;\r\n  if (!cast || cast.length <= 0) return null;\r\n  return (\r\n    <div className=\"py-10\">\r\n      <h2 className=\"text-center text-3xl mb-10\">Casts</h2>\r\n      <div className=\"grid grid-cols-4 gap-5\">\r\n        {cast.slice(0, 4).map((item) => (\r\n          <div className=\"cast-item\" key={item.id}>\r\n            <img\r\n              src={tmdbAPI.imageOriginal(item.profile_path)}\r\n              alt=\"\"\r\n              className=\"w-full h-[350px] object-cover rounded-lg\"\r\n            />\r\n            <h3 className=\"text-xl font-medium\">{item.name}</h3>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction MovieVideos() {\r\n  const { movieID } = useParams();\r\n  const { data, error } = useSWR(\r\n    tmdbAPI.getMovieCredits(movieID, \"videos\"),\r\n    fetcher\r\n  );\r\n  if (!data) return null;\r\n  console.log(\"data\", data);\r\n  const { results } = data;\r\n  if (!results || results.length <= 0) return null;\r\n  return (\r\n    <div className=\"py-10\">\r\n      <div className=\"flex flex-col gap-10\">\r\n        {results.slice(0, 2).map((item) => (\r\n          <div key={item.id} className=\"\">\r\n            <h3 className=\"mb-5 text-xl font-medium p-3 bg-secondary inline-block rounded-[6px]\">\r\n              {item.name}\r\n            </h3>\r\n            <div className=\"w-full aspect-video \">\r\n              <iframe\r\n                width=\"727\"\r\n                height=\"409\"\r\n                src={`https://www.youtube.com/embed/${item.key}`}\r\n                title=\"YouTube video player\"\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                className=\"w-full h-full object-fill\"\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MovieSimilar() {\r\n  const { movieID } = useParams();\r\n  const { data, error } = useSWR(\r\n    tmdbAPI.getMovieCredits(movieID, \"similar\"),\r\n    fetcher\r\n  );\r\n  if (!data) return null;\r\n  console.log(\"data\", data);\r\n  const { results } = data;\r\n  if (!results || results.length <= 0) return null;\r\n  return (\r\n    <div className=\"py-10\">\r\n      <h2 className=\"text-3xl font-medium mb-10\">Similar movies</h2>\r\n      <div className=\"movie-list\">\r\n        <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\r\n          {results.length > 0 &&\r\n            results.map((item) => (\r\n              <SwiperSlide key={item.id}>\r\n                <MovieCard item={item}></MovieCard>\r\n              </SwiperSlide>\r\n            ))}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default MovieDetailPage;\r\n"],"names":["props","className","style","height","width","borderRadius","radius","item","navigate","useNavigate","title","vote_average","release_date","poster_path","id","src","tmdbAPI","alt","Date","getFullYear","Button","full","bgColor","onClick","MovieCardSkeleton","MovieCredit","movieID","useParams","useSWR","fetcher","data","error","console","log","cast","length","slice","map","profile_path","name","MovieVideos","results","key","frameBorder","allow","MovieSimilar","grabCursor","spaceBetween","slidesPerView","backdrop_path","genres","overview","backgroundImage"],"sourceRoot":""}